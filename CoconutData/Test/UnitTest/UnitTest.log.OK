Hello, World!
* testPreference
LogLevel: flow
* fontManager
* testStringStream
- Test string stream to token
[INIT] String(" (ab, c1, da_) : e01 > hoge fuga")[0:32]
[STREAM-A] String(" (ab, c1, da_) : e01 ")[0:21]
[STREAM-B] String(" hoge fuga")[0:10]
<Tokens>
SymbolToken(()
IdentifierToken(ab)
SymbolToken(,)
IdentifierToken(c1)
SymbolToken(,)
IdentifierToken(da_)
SymbolToken())
SymbolToken(:)
IdentifierToken(e01)
- Test string stream to decode
Decoded value: 1234 ... OK
Remained: a .. OK
* testAttributedString
Start Vector Test --------------
-------- [begin]
.a*b.c
-------- [end]
Line count = 0
holizOffset = 1
holizReverseOffset = 2
moveCursorBackward(1)
-------- [begin]
*a.b.c
-------- [end]
moveCursorBackward(2)
-------- [begin]
*a.b.c
-------- [end]
moveCursorForward(3)
-------- [begin]
.a.b.c*$
-------- [end]
moveCursorForward(4)
-------- [begin]
.a.b.c*$
-------- [end]
moveCursorToLineStart
-------- [begin]
*a.b.c
-------- [end]
moveCursorToLineEnd
-------- [begin]
.a.b.c*$
-------- [end]
moveCursorUpOrDown(up, 1)
-------- [begin]
.a.b.c*$
-------- [end]
moveCursorUpOrDown(down, 2)
-------- [begin]
.a.b.c*$
-------- [end]
moveCursorTo(x=1)
-------- [begin]
.a*b.c
-------- [end]
moveCursorTo(x=0, y=1)
-------- [begin]
*a.b.c
-------- [end]
write("ABCD")
-------- [begin]
.A.B.C.D*$
-------- [end]
moveCursorBackward(2)
-------- [begin]
.A.B*C.D
-------- [end]
deleteForwardCharacters(1)
-------- [begin]
.A.B*D
-------- [end]
deleteBackwardCharacters(1)
-------- [begin]
.A*D
-------- [end]
deleteEntireLine
-------- [begin]
*$
-------- [end]
Start Vector Test --------------
-------- [begin]
.a.b.c.$
.d.e*f.$
.g.h.i.$

-------- [end]
Line count = 3
holizOffset = 2
holizReverseOffset = 1
moveCursorBackward(1)
-------- [begin]
.a.b.c.$
.d*e.f.$
.g.h.i.$

-------- [end]
moveCursorBackward(2)
-------- [begin]
.a.b.c.$
*d.e.f.$
.g.h.i.$

-------- [end]
moveCursorForward(3)
-------- [begin]
.a.b.c.$
.d.e.f*$
.g.h.i.$

-------- [end]
moveCursorForward(4)
-------- [begin]
.a.b.c.$
.d.e.f*$
.g.h.i.$

-------- [end]
moveCursorToLineStart
-------- [begin]
.a.b.c.$
*d.e.f.$
.g.h.i.$

-------- [end]
moveCursorToLineEnd
-------- [begin]
.a.b.c.$
.d.e.f*$
.g.h.i.$

-------- [end]
moveCursorUpOrDown(up, 1)
-------- [begin]
.a.b.c*$
.d.e.f.$
.g.h.i.$

-------- [end]
moveCursorUpOrDown(down, 2)
-------- [begin]
.a.b.c.$
.d.e.f.$
.g.h.i*$

-------- [end]
moveCursorTo(x=1)
-------- [begin]
.a.b.c.$
.d.e.f.$
.g*h.i.$

-------- [end]
moveCursorTo(x=0, y=1)
-------- [begin]
.a.b.c.$
*d.e.f.$
.g.h.i.$

-------- [end]
write("ABCD")
-------- [begin]
.a.b.c.$
.A.B.C.D*$
.g.h.i.$

-------- [end]
moveCursorBackward(2)
-------- [begin]
.a.b.c.$
.A.B*C.D.$
.g.h.i.$

-------- [end]
deleteForwardCharacters(1)
-------- [begin]
.a.b.c.$
.A.B*D.$
.g.h.i.$

-------- [end]
deleteBackwardCharacters(1)
-------- [begin]
.a.b.c.$
.A*D.$
.g.h.i.$

-------- [end]
deleteEntireLine
-------- [begin]
.a.b.c.$
*$
.g.h.i.$

-------- [end]
* testStringUtil
"padding---"
"0123456789"
"01234     "
"     01234"
"  01234   "
* traceForward:  " * " -> "* "
* traceBackward: " * " -> " *"
* traceForward:  "* " -> "* "
* traceBackward: "* " -> "*"
* traceForward:  " *" -> "*"
* traceBackward: " *" -> " *"
* traceForward:  "*" -> "*"
* traceBackward: "*" -> "*"
* traceForward:  " " -> ""
* traceBackward: " " -> " "
* traceForward:  "" -> ""
* traceBackward: "" -> ""
// test CNStringUtil.divideBySpaces
"" => []
"a" => ["a" ]
"12 23" => ["12" "23" ]
" 23 34 " => ["23" "34" ]
" 34      4 5 " => ["34" "4" "5" ]
firstWord: "a" => ("a", <nil>)
firstWord: "b c d" => ("b", "c d")
firstWord: " e f g " => ("e", "f g ")
firstWord: "" => (<nil>, <nil>)
firstWord: "/path/script.js `{args: "a"}`" => ("/path/script.js", "`{args: "a"}`")
* testCharacter
"NUL":0x00 "SOH":0x01 "STX":0x02 "ETX":0x03 "EOT":0x04 "ENQ":0x05 "ACK":0x06 "BEL":0x07 
"BS":0x08 "TAB":0x09 "LF":0x0a "VT":0x0b "FF":0x0c "CR":0x0d "SO":0x0e "SI":0x0f 
"DLE":0x10 "DC1":0x11 "DC2":0x12 "DC3":0x13 "DC4":0x14 "NAK":0x15 "SYN":0x16 "ETB":0x17 
"CAN":0x18 "EM":0x19 "SUB":0x1a "ESC":0x1b "FS":0x1c "GS":0x1d "RS":0x1e "US":0x1f 
" ":0x20 "!":0x21 """:0x22 "#":0x23 "$":0x24 "%":0x25 "&":0x26 "'":0x27 
"(":0x28 ")":0x29 "*":0x2a "+":0x2b ",":0x2c "-":0x2d ".":0x2e "/":0x2f 
"0":0x30 "1":0x31 "2":0x32 "3":0x33 "4":0x34 "5":0x35 "6":0x36 "7":0x37 
"8":0x38 "9":0x39 ":":0x3a ";":0x3b "<":0x3c "=":0x3d ">":0x3e "?":0x3f 
"@":0x40 "A":0x41 "B":0x42 "C":0x43 "D":0x44 "E":0x45 "F":0x46 "G":0x47 
"H":0x48 "I":0x49 "J":0x4a "K":0x4b "L":0x4c "M":0x4d "N":0x4e "O":0x4f 
"P":0x50 "Q":0x51 "R":0x52 "S":0x53 "T":0x54 "U":0x55 "V":0x56 "W":0x57 
"X":0x58 "Y":0x59 "Z":0x5a "[":0x5b "\":0x5c "]":0x5d "^":0x5e "_":0x5f 
"`":0x60 "a":0x61 "b":0x62 "c":0x63 "d":0x64 "e":0x65 "f":0x66 "g":0x67 
"h":0x68 "i":0x69 "j":0x6a "k":0x6b "l":0x6c "m":0x6d "n":0x6e "o":0x6f 
"p":0x70 "q":0x71 "r":0x72 "s":0x73 "t":0x74 "u":0x75 "v":0x76 "w":0x77 
"x":0x78 "y":0x79 "z":0x7a "{":0x7b "|":0x7c "}":0x7d "~":0x7e "DEL":0x7f 
* testURL
nullURL = file:///dev/null
* testValue
exp: true -> real: true
exp: Hello, world -> real: Hello, world
* testQueue
Initial: {1st:-1, next:0, count:0 }
[]
Push: {1st:0, next:1, count:1 }
[0 ]
Push: {1st:0, next:2, count:2 }
[0 1 ]
Pop: {1st:1, next:2, count:2 }
[1 ]
 Data = 0
Pop: {1st:2, next:2, count:2 }
[]
 Data = 1
Pop: {1st:2, next:2, count:2 }
[]
 Data = nil
Push x 16: {1st:2, next:18, count:18 }
[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ]
Pop x 16: {1st:18, next:18, count:18 }
[]
Pop 1 more : {1st:18, next:18, count:18 }
[]
Push x 16: {1st:18, next:34, count:34 }
[16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ]
Pop x 16: {1st:34, next:34, count:34 }
[]
Pop 1 more : {1st:34, next:34, count:34 }
[]
Push x 16: {1st:34, next:50, count:50 }
[32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 ]
Pop x 16: {1st:50, next:50, count:50 }
[]
Pop 1 more : {1st:50, next:50, count:50 }
[]
Push x 16: {1st:50, next:66, count:66 }
[48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 ]
Pop x 16: {1st:2, next:2, count:66 }
[]
Pop 1 more : {1st:2, next:2, count:66 }
[]
Push x 16: {1st:2, next:18, count:66 }
[64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 ]
Pop x 16: {1st:18, next:18, count:66 }
[]
Pop 1 more : {1st:18, next:18, count:66 }
[]
Push x 16: {1st:18, next:34, count:66 }
[80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 ]
Pop x 16: {1st:34, next:34, count:66 }
[]
Pop 1 more : {1st:34, next:34, count:66 }
[]
Push x 16: {1st:34, next:50, count:66 }
[96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 ]
Pop x 16: {1st:50, next:50, count:66 }
[]
Pop 1 more : {1st:50, next:50, count:66 }
[]
Push x 16: {1st:50, next:66, count:66 }
[112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 ]
Pop x 16: {1st:2, next:2, count:66 }
[]
Pop 1 more : {1st:2, next:2, count:66 }
[]
* testConsole
- put string to buffer
- flush buffer
buffer1
buffer2
- after buffered
after1
* testFileHandle
FileDescriptor = 0
- Initial state -> isatty: false, local mode: <unknown>
- Set raw mode -> Failed
- Reset raw mode -> Failed
* testFile
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>$(DEVELOPMENT_LANGUAGE)</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>FMWK</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
	<key>CFBundleVersion</key>
	<string>$(CURRENT_PROJECT_VERSION)</string>
	<key>NSHumanReadableCopyright</key>
	<string>Copyright (C) 2018 Steel Wheels Project. All rights reserved.</string>
	<key>NSPrincipalClass</key>
	<string></string>
</dict>
</plist>
* testFilePath
testFilePath: Info.plist
UTI: com.apple.property-list 
Get sceme from "/usr/local/bin" -> <none> -> OK
Get sceme from "https://yahoo.com" -> Sceme:"https" -> OK
Get sceme from "https//yahoo.com" -> <none> -> OK
Get sceme from "ftp.c://yahoo.com" -> Sceme:"ftp.c" -> OK
* testFileManager
Test: fileExists -> OK
Test: fileExists -> OK
Test: isAccessible (Read) -> OK
Test: isAccessible (Read) -> OK
Test: isAccessible (CurDir) -> OK
home-dir: /Users/tomoo
rel: /tmp/a -> OK
rel: a.txt -> OK
rel: subdir/a.txt -> OK
rel: ../a.txt -> OK
* testObserver
isExecuting -> true
* testOperation
Wait for finish operations
testOperation ... Done
* testOperationQueue
* TEST0
Finished0
Finished1
Done (0)
* TEST1
Finished0
Finished1
Done (1)
* TEST2
Finished0
Finished1
Done (2)
testOperationQueue: OK
* testProcess
Hello, World !!
END of process
Process is finished with exit code: 0
Execute process which can not be finished
Terminate the process
END of process
Process is terminated with exit code: 15
* testThread
testSimpleThread: 1. Begin
testSimpleThread: 3: ecode = 0
testNestedThread: 1. Begin
testNestedThread: 2. End code: 0
* testGraphics
point: (10.0, 10.0) -> (5.0, 5.0) -> (10.0, 10.0) ... OK
size: (5.0, 5.0) -> (2.5, 2.5) -> (5.0, 5.0) ... OK
* testEscapeSequence
* dumpSequence
string("Hello, World !!")
* dumpCode
cursorUp(1)
Same code
* dumpCode
cursorForward(3)
Same code
* dumpCode
cursorPoisition(1,2)
Same code
* dumpCode
eraceEntireLine
Same code
* dumpCode
boldCharacter(true)
Same code
* dumpCode
boldCharacter(false)
Same code
* dumpCode
underlineCharacter(true)
Same code
* dumpCode
underlineCharacter(false)
Same code
* dumpCode
blinkCharacter(true)
Same code
* dumpCode
blinkCharacter(false)
Same code
* dumpCode
reverseCharacter(true)
Same code
* dumpCode
reverseCharacter(false)
Same code
* dumpCode
foregroundColor(white)
Same code
* dumpCode
defaultForegroundColor
Same code
* dumpCode
backgroundColor(red)
Same code
* dumpCode
defaultBackgroundColor
Same code
* dumpCode
resetCharacterAttribute
Same code
* dumpCode
requestScreenSize
Same code
* dumpCode
screenSize(80, 25)
Same code
* dumpSequence
string("Hello, ")
cursorNextLine(1)
string(" and ")
eraceEntireLine
string(". Bye.")
* testColor
black : OK
red : OK
green : OK
yellow : OK
blue : OK
magenta : OK
cyan : OK
white : OK
* testTextStorage
- Initial state
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3*4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:string("Hello")
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.l.o*9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:string("Good-morning!!")
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.l.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!*$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(14)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.l.o*G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:backspace
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.l*o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:newline
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.l*$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:backspace
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l*l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:delete
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e*l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorUp(1)
-------- [begin]
.a.b.c.d.e.f*g.h.i.j.$
.0.1.2.3.H.e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorDown(1)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e*l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorForward(1)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l*$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(1)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e*l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorForward(20)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l*$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(20)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
*0.1.2.3.H.e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorForward(5)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H*e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorNextLine(2)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H.e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e*f.g.h.i.j
-------- [end]
- Execute:cursorPreviousLine(2)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3.H*e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorHolizontalAbsolute(4)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1.2.3*H.e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorHolizontalAbsolute(2)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1*2.3.H.e.l.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceFromCursorToEnd
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.0.1*$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceFromCursorToBegin
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
*$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:string("abcdefghij
0123456789
abcdefghij")
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.a.b.c.d.e.f.g.h.i.j*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(5)
-------- [begin]
.a.b.c.d.e.f.g.h.i.j.$
.a.b.c.d.e*f.g.h.i.j.$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j.$
.o.G.o.o.d.-.m.o.r.n.i.n.g.!.!.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceEntireBuffer
-------- [begin]
*$
-------- [end]
- Execute:string("abcdefghij
0123456789
abcdefghij")
-------- [begin]
.a.b.c.d.e.f.g.h.i.j*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(5)
-------- [begin]
.a.b.c.d.e*f.g.h.i.j.$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorUp(1)
-------- [begin]
.a.b.c.d.e*f.g.h.i.j.$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceFromCursorToRight
-------- [begin]
.a.b.c.d.e*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceFromCursorToLeft
-------- [begin]
*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:string("inserted")
-------- [begin]
.i.n.s.e.r.t.e.d*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:cursorBack(5)
-------- [begin]
.i.n.s*e.r.t.e.d.$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:eraceEntireLine
-------- [begin]
*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:boldCharacter(true)
- Execute:underlineCharacter(true)
- Execute:blinkCharacter(true)
- Execute:reverseCharacter(true)
- Execute:foregroundColor(red)
- Execute:defaultForegroundColor
- Execute:backgroundColor(blue)
- Execute:defaultBackgroundColor
- Execute:string("COLOR")
-------- [begin]
.C.O.L.O.R*$
.0.1.2.3.4.5.6.7.8.9.$
.a.b.c.d.e.f.g.h.i.j
-------- [end]
- Execute:resetCharacterAttribute
* testKeyBinding
selectorName:insertNewline: -> [newline ]
selectorName:insertNewlineIgnoringFieldEditor: -> [newline ]
selectorName:insertTab: -> [tab ]
selectorName:insertTabIgnoringFieldEditor: -> [tab ]
selectorName:insertBacktab: -> [Error] Failed to convert to escape code
selectorName:cycleToNextInputScript: -> [Error] Failed to convert to escape code
selectorName:togglePlatformInputSystem: -> [Error] Failed to convert to escape code
selectorName:cycleToNextInputKeyboardLayout: -> [Error] Failed to convert to escape code
selectorName:deleteBackward: -> [delete ]
selectorName:deleteWordBackward: -> [Error] Failed to convert to escape code
selectorName:deleteForward: -> [cursorForward(1) delete ]
selectorName:deleteWordForward: -> [Error] Failed to convert to escape code
selectorName:cancelOperation: -> [string("") ]
[Error] Failed to decode keybinding: complete:
selectorName:moveUp: -> [cursorUp(1) ]
selectorName:moveUpAndModifySelection: -> [cursorUp(1) ]
selectorName:scrollPageUp: -> [Error] Failed to convert to escape code
selectorName:moveToBeginningOfDocument: -> [Error] Failed to convert to escape code
selectorName:moveToBeginningOfDocumentAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveToBeginningOfParagraph: -> [Error] Failed to convert to escape code
selectorName:moveParagraphBackwardAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveDown: -> [cursorDown(1) ]
selectorName:moveDownAndModifySelection: -> [cursorDown(1) ]
selectorName:scrollPageDown: -> [Error] Failed to convert to escape code
selectorName:moveToEndOfDocument: -> [Error] Failed to convert to escape code
selectorName:moveToEndOfDocumentAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveToEndOfParagraph: -> [Error] Failed to convert to escape code
selectorName:moveParagraphForwardAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveLeft: -> [cursorBack(1) ]
selectorName:moveLeftAndModifySelection: -> [cursorBack(1) ]
selectorName:moveToBeginningOfLine: -> [Error] Failed to convert to escape code
selectorName:moveToBeginningOfLineAndModifySelection: -> [Error] Failed to convert to escape code
[Error] Failed to decode keybinding: changeBaseWritingDirectionToRTL:
[Error] Failed to decode keybinding: changeBaseWritingDirectionToLTR:
selectorName:moveWordLeft: -> [Error] Failed to convert to escape code
selectorName:moveWordLeftAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveRight: -> [cursorForward(1) ]
selectorName:moveRightAndModifySelection: -> [cursorForward(1) ]
selectorName:moveToEndOfLine: -> [Error] Failed to convert to escape code
selectorName:moveToEndOfLineAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveWordRight: -> [Error] Failed to convert to escape code
selectorName:moveWordRightAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:scrollToBeginningOfDocument: -> [Error] Failed to convert to escape code
selectorName:scrollToEndOfDocument: -> [Error] Failed to convert to escape code
selectorName:pageUp: -> [Error] Failed to convert to escape code
selectorName:pageUpAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:pageDown: -> [Error] Failed to convert to escape code
selectorName:pageDownAndModifySelection: -> [Error] Failed to convert to escape code
selectorName:moveBackward: -> [cursorBack(1) ]
selectorName:moveForward: -> [cursorForward(1) ]
selectorName:deleteToEndOfParagraph: -> [Error] Failed to convert to escape code
[Error] Failed to decode keybinding: centerSelectionInVisibleArea:
[Error] Failed to decode keybinding: transpose:
[Error] Failed to decode keybinding: yank:
* testDatabse
* Main database: Initial state
  read_cache: {
  }
  write_cache: {
  }
  main_database: {
  }
* Main database: add some values
  read_cache: {
  }
  write_cache: {
    ident0 : 1
    ident1 : 1.23
  }
  main_database: {
  }
* Main database: after commit
  read_cache: {
  }
  write_cache: {
  }
  main_database: {
      ident0 : 1
      ident1 : 1.23
  }
read "ident0" -> 1
read "ident1" -> 1.23
read "ident2" -> nil
* Remote database: read
read "ident0" -> 1
read "ident1" -> 1.23
read "ident2" -> nil
  read_cache: {
    ident0 : 1
    ident1 : 1.23
  }
  write_cache: {
  }
* Remote database: write
  read_cache: {
    ident0 : 1
    ident1 : 1.23
  }
  write_cache: {
    ident2 : "Hello"
  }
* Remote database: commit
read "ident0" -> 0
read "ident1" -> 1.23
read "ident2" -> "Hello"
  read_cache: {
    ident0 : 0
    ident1 : 1.23
    ident2 : "Hello"
  }
  write_cache: {
  }
* testResource
[Path] a.num
Load resource for file:///tmp/a.num
[OK] Loaded => 1.23
[Result] OK
